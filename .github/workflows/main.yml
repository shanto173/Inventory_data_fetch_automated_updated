name: Odoo Stock Report Automation

on:
  workflow_dispatch:
    inputs:
      script_choice:
        description: "Select which script(s) to run (or choose 'Custom Multi-Select')."
        required: true
        default: "Closing_stock.py"
        type: choice
        options:
          - All
          - Closing_stock.py
          - Raw_materials.py
          - pending_slider.py
          - inventory_ageing.py
          - inovice_summary.py
          - Relese_inovice_summary.py
          - Consumption_stock_mar24_till.py
          - Consumption_stock_Apr24_till.py
          - Sep_inovice_summary.py
          - pending_invoice_last_month.py
          - Custom Multi-Select

      custom_scripts:
        description: "If 'Custom Multi-Select' is chosen, list scripts separated by commas (e.g., Closing_stock.py, Raw_materials.py)"
        required: false
        default: ""

      from_date:
        description: "Start date (YYYY-MM-DD). Optional."
        required: false
        default: ""
      to_date:
        description: "End date (YYYY-MM-DD). Optional."
        required: false
        default: ""

  schedule:
    - cron: '*/30 * * * *'

jobs:
  download-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python modules
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas gspread gspread-dataframe google-auth google-auth-oauthlib google-auth-httplib2 selenium webdriver-manager openpyxl pytz python-dotenv

      - name: Set environment variables (dates)
        run: |
          if [ -z "${{ github.event.inputs.from_date }}" ]; then
            echo "FROM_DATE=" >> $GITHUB_ENV
          else
            echo "FROM_DATE=${{ github.event.inputs.from_date }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ github.event.inputs.to_date }}" ]; then
            echo "TO_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          else
            echo "TO_DATE=${{ github.event.inputs.to_date }}" >> $GITHUB_ENV
          fi

      - name: Decode Google credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}" | base64 --decode > gcreds.json

      - name: Run selected scripts
        run: |
          ALL_SCRIPTS=(
            "Closing_stock.py"
            "Raw_materials.py"
            "pending_slider.py"
            "inventory_ageing.py"
            "inovice_summary.py"
            "Relese_inovice_summary.py"
            "Consumption_stock_mar24_till.py"
            "Consumption_stock_Apr24_till.py"
            "Sep_inovice_summary.py"
            "pending_invoice_last_month.py"
          )

          INPUT="${{ github.event.inputs.script_choice }}"
          CUSTOM="${{ github.event.inputs.custom_scripts }}"

          if [ "$INPUT" == "All" ]; then
            SCRIPTS_TO_RUN=("${ALL_SCRIPTS[@]}")
          elif [ "$INPUT" == "Custom Multi-Select" ] && [ -n "$CUSTOM" ]; then
            IFS=',' read -r -a SCRIPTS_TO_RUN <<< "$CUSTOM"
          else
            SCRIPTS_TO_RUN=("$INPUT")
          fi

          for SCRIPT in "${SCRIPTS_TO_RUN[@]}"; do
            SCRIPT_TRIMMED=$(echo "$SCRIPT" | xargs)
            echo "â–¶ Running $SCRIPT_TRIMMED..."
            python "$SCRIPT_TRIMMED"
          done
        env:
          ODOO_URL: ${{ secrets.ODOO_URL }}
          ODOO_DB: ${{ secrets.ODOO_DB }}
          ODOO_USERNAME: ${{ secrets.ODOO_USERNAME }}
          ODOO_PASSWORD: ${{ secrets.ODOO_PASSWORD }}
          FROM_DATE: ${{ env.FROM_DATE }}
          TO_DATE: ${{ env.TO_DATE }}
